{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport youtube from '../apis/youtube.js';\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\n\nconst App = () => {\n  _s();\n\n  const [videos, setVideos] = [];\n  const [selectedVideo, setselectedVideo] = useState(null);\n  useEffect(() => {\n    onSearchsubmit('bmx');\n  }, []);\n\n  const onSearchSubmit = async term => {\n    const response = await youtube.get('/search', {\n      pararms: {\n        q: term\n      }\n    });\n    setVideos(response.data.items);\n    setselectedVideo(response.data.items[0]);\n  };\n};\n\n_s(App, \"gRI8EpAoAgw0KZ974Nw88WhyxoE=\");\n\n_c = App;\n{\n  /* CLASS COMPONENT\n     class App extends React.Component {\n     state= { videos: [], selectedVideo: null };\n      componentDidMount() {\n         this.onSearchSubmit('bmx');\n     }\n      onSearchSubmit = async searchtext => {\n        const response = await youtube.get('/search', {\n            params:{\n                q: searchtext\n            }\n        });\n         this.setState({ \n            videos: response.data.items,\n            selectedVideo: response.data.items[0] \n         });\n      };\n      onVideoSelect = video => {\n         this.setState({selectedVideo: video});\n     }\n      render() {\n         return (\n             <div className=\"ui container\">\n                 <SearchBar onSearchSubmit={this.onSearchSubmit} />\n                 <div className=\"ui grid\">\n                     <div className=\"ui stackable grid\">\n                         <div className=\"ten wide column\">\n                             <VideoDetail video={this.state.selectedVideo} />\n                         </div>\n                         <div className=\"six wide column\">\n                          <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\n                         </div>\n                     </div>\n                 </div>        \n             </div>\n         )\n     }\n  } */\n}\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/broopa/Documents/Random_Things/Continued Learning/React:Redux/Vid-Search/src/components/App.js"],"names":["React","useState","useEffect","youtube","SearchBar","VideoList","VideoDetail","App","videos","setVideos","selectedVideo","setselectedVideo","onSearchsubmit","onSearchSubmit","term","response","get","pararms","q","data","items"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAuB,EAA7B;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,cAAc,CAAC,KAAD,CAAd;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,cAAc,GAAG,MAAMC,IAAN,IAAc;AACjC,UAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,GAAR,CAAY,SAAZ,EAAuB;AAC1CC,MAAAA,OAAO,EAAE;AACLC,QAAAA,CAAC,EAACJ;AADG;AADiC,KAAvB,CAAvB;AAMJL,IAAAA,SAAS,CAACM,QAAQ,CAACI,IAAT,CAAcC,KAAf,CAAT;AACAT,IAAAA,gBAAgB,CAACI,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoB,CAApB,CAAD,CAAhB;AACC,GATD;AAUH,CAlBD;;GAAMb,G;;KAAAA,G;AAoBN;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMK;AAEL,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport youtube from '../apis/youtube.js';\nimport SearchBar from './SearchBar';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\n\nconst App = () => {\n    const [videos, setVideos] = ([]);\n    const [selectedVideo, setselectedVideo] = useState(null);\n\n    useEffect(() => {\n        onSearchsubmit('bmx');\n    }, []);\n\n    const onSearchSubmit = async term => {\n        const response = await youtube.get('/search', {\n            pararms: {\n                q:term\n            }\n        });\n\n    setVideos(response.data.items);\n    setselectedVideo(response.data.items[0])\n    };\n};\n\n{/* CLASS COMPONENT\n    class App extends React.Component {\n    state= { videos: [], selectedVideo: null };\n\n    componentDidMount() {\n        this.onSearchSubmit('bmx');\n    }\n\n    onSearchSubmit = async searchtext => {\n       const response = await youtube.get('/search', {\n           params:{\n               q: searchtext\n           }\n       });\n\n       this.setState({ \n           videos: response.data.items,\n           selectedVideo: response.data.items[0] \n        });\n\n    };\n\n    onVideoSelect = video => {\n        this.setState({selectedVideo: video});\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\">\n                <SearchBar onSearchSubmit={this.onSearchSubmit} />\n                <div className=\"ui grid\">\n                    <div className=\"ui stackable grid\">\n                        <div className=\"ten wide column\">\n                            <VideoDetail video={this.state.selectedVideo} />\n                        </div>\n                        <div className=\"six wide column\">\n                         <VideoList onVideoSelect={this.onVideoSelect} videos={this.state.videos} />\n                        </div>\n                    </div>\n                </div>        \n            </div>\n        )\n    }\n} */}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}